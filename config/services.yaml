# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

# Pour définir un service de variables
parameters:
    # mon_parametre: ma_valeur


    
    # Pour définir un service de classes
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            \Swift_Mailer: '@swift.mailer.second_mailer'
            $specialMailer: '@swift.mailer.second_mailer'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    OC_platforme.antispam:                      #nom du service qu'on va utiliser pour l'appeller         
        class: App\AntiSpam\OCAntiSpame         #defini le namespace complet de la classe du service

    OC_platform.email.application_mailer:
        class: App\Email\ApplicationMailer
        arguments:
            - "@mailer"

    OC_platform.purger.advert:
        class: App\Purger\OCPurger


    OC_platform.validator.antiflood:                # nom du service
        class: App\Validator\AntifloodValidator     # defini le namespace complet de la classe du service

        # les services donnée qu'on injecte au service  la requete et entityManager
        arguments: 
            - ["@request_stack", "@doctrine.orm.entity_manager"]

        # c'est avec l'alias qu'on retrouvera le service
        tags:
            - {
                name: validator.constraint_validator,
                alias: OC_platform_validator_antiflood
            }

    

